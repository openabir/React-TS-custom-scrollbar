{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/components/Scrollbar.tsx","../src/polyfills.ts","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"sourcesContent":["/**\n * Get scroll values for an element\n */\nexport function getScrollValues(element: HTMLElement) {\n  const {\n    scrollLeft,\n    scrollTop,\n    scrollWidth,\n    scrollHeight,\n    clientWidth,\n    clientHeight,\n  } = element;\n\n  return {\n    left: scrollLeft / (scrollWidth - clientWidth) || 0,\n    top: scrollTop / (scrollHeight - clientHeight) || 0,\n    scrollLeft,\n    scrollTop,\n    scrollWidth,\n    scrollHeight,\n    clientWidth,\n    clientHeight,\n  };\n}\n\n/**\n * Check if element is a DOM element\n */\nexport function isDOMElement(element: any): element is HTMLElement {\n  if (!element) return false;\n  return (\n    typeof element === \"object\" &&\n    element.nodeType === 1 &&\n    typeof element.style === \"object\"\n  );\n}\n\n/**\n * Return false if passive events aren't supported, otherwise return an object with passive: true\n */\nexport const getPassiveOptions = () => {\n  let passiveSupported = false;\n\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return true;\n      },\n    };\n\n    // Use type assertion to handle the options object\n    window.addEventListener(\n      \"test\",\n      () => {},\n      options as AddEventListenerOptions\n    );\n    window.removeEventListener(\n      \"test\",\n      () => {},\n      options as AddEventListenerOptions\n    );\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported ? { passive: true } : false;\n};\n\n/**\n * Calculate thumb size\n */\nexport function getThumbSize({\n  thumbMinSize,\n  trackSize,\n  contentSize,\n}: {\n  thumbMinSize: number;\n  trackSize: number;\n  contentSize: number;\n}) {\n  const ratio = trackSize / contentSize;\n  const thumbSize = Math.max(ratio * trackSize, thumbMinSize);\n  return thumbSize;\n}\n\n/**\n * Calculate thumb position\n */\nexport function getThumbPosition({\n  thumbSize,\n  trackSize,\n  contentSize,\n  scrollPosition,\n}: {\n  thumbSize: number;\n  trackSize: number;\n  contentSize: number;\n  scrollPosition: number;\n}) {\n  const maxScrollPosition = contentSize - trackSize;\n\n  // If content fits or is smaller than track, return 0\n  if (maxScrollPosition <= 0) {\n    return 0;\n  }\n\n  const maxThumbPosition = trackSize - thumbSize;\n  const ratio = maxThumbPosition / maxScrollPosition;\n  return scrollPosition * ratio;\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { ScrollbarProps, ScrollValues } from \"../types\";\nimport {\n  getScrollValues,\n  isDOMElement,\n  getPassiveOptions,\n  getThumbSize,\n  getThumbPosition,\n} from \"../utils\";\n\n// Default component styles\nconst containerStyle: React.CSSProperties = {\n  position: \"relative\",\n  overflow: \"hidden\",\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst viewStyle: React.CSSProperties = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  overflow: \"scroll\",\n  WebkitOverflowScrolling: \"touch\",\n};\n\nconst trackHorizontalStyle: React.CSSProperties = {\n  position: \"absolute\",\n  height: 6,\n  right: 2,\n  bottom: 2,\n  left: 2,\n  borderRadius: 3,\n};\n\nconst trackVerticalStyle: React.CSSProperties = {\n  position: \"absolute\",\n  width: 6,\n  right: 2,\n  bottom: 2,\n  top: 2,\n  borderRadius: 3,\n};\n\nconst thumbHorizontalStyle: React.CSSProperties = {\n  position: \"absolute\",\n  height: \"100%\",\n  cursor: \"pointer\",\n  borderRadius: \"inherit\",\n  backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n};\n\nconst thumbVerticalStyle: React.CSSProperties = {\n  position: \"absolute\",\n  width: \"100%\",\n  cursor: \"pointer\",\n  borderRadius: \"inherit\",\n  backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n};\n\n// Default props\nconst defaultProps: Partial<ScrollbarProps> = {\n  autoHide: false,\n  autoHideTimeout: 1000,\n  autoHideDuration: 200,\n  autoHeight: false,\n  autoHeightMin: 0,\n  autoHeightMax: 200,\n  thumbMinSize: 30,\n  universal: false,\n  hideTracksWhenNotNeeded: false,\n  a11yEnabled: true,\n  ariaLabel: \"Scrollable content\",\n  keyboardScrollAmount: 40,\n};\n\nconst Scrollbar: React.FC<ScrollbarProps> = (props) => {\n  // Merge default props with provided props\n  const {\n    onScrollStart,\n    onScrollStop,\n    onScroll,\n    onScrollFrame,\n    onUpdate,\n    renderView,\n    renderTrackHorizontal,\n    renderTrackVertical,\n    renderThumbHorizontal,\n    renderThumbVertical,\n    autoHide,\n    autoHideTimeout,\n    autoHideDuration,\n    autoHeight,\n    autoHeightMin,\n    autoHeightMax,\n    thumbMinSize,\n    universal,\n    className,\n    style,\n    hideTracksWhenNotNeeded,\n    a11yEnabled,\n    ariaLabel,\n    keyboardScrollAmount,\n    children,\n  } = { ...defaultProps, ...props };\n\n  // Component state\n  const [scrollValues, setScrollValues] = useState<ScrollValues>({\n    left: 0,\n    top: 0,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollWidth: 0,\n    scrollHeight: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const [isTrackMouseOver, setIsTrackMouseOver] = useState(false);\n  const [showTracks, setShowTracks] = useState(!autoHide);\n\n  // Refs\n  const containerRef = useRef<HTMLDivElement>(null);\n  const viewRef = useRef<HTMLDivElement>(null);\n  const trackHorizontalRef = useRef<HTMLDivElement>(null);\n  const trackVerticalRef = useRef<HTMLDivElement>(null);\n  const thumbHorizontalRef = useRef<HTMLDivElement>(null);\n  const thumbVerticalRef = useRef<HTMLDivElement>(null);\n  const scrollingRef = useRef<boolean>(false);\n  const scrollTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTracksTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const dragStartRef = useRef<{\n    x: number;\n    y: number;\n    left: number;\n    top: number;\n  } | null>(null);\n\n  // Calculate if tracks should be visible\n  const hasHorizontalTrack =\n    scrollValues.scrollWidth > scrollValues.clientWidth;\n  const hasVerticalTrack =\n    scrollValues.scrollHeight > scrollValues.clientHeight;\n  const showHorizontalTrack = !hideTracksWhenNotNeeded || hasHorizontalTrack;\n  const showVerticalTrack = !hideTracksWhenNotNeeded || hasVerticalTrack;\n\n  // Update scroll values\n  const handleUpdate = useCallback(() => {\n    if (!viewRef.current) return;\n\n    const values = getScrollValues(viewRef.current);\n    setScrollValues(values);\n\n    if (onUpdate) {\n      onUpdate(values);\n    }\n  }, [onUpdate]);\n\n  // Handle scroll events\n  const handleScroll = useCallback(() => {\n    if (!viewRef.current) return;\n\n    const values = getScrollValues(viewRef.current);\n    setScrollValues(values);\n\n    if (onScroll) {\n      onScroll(values);\n    }\n\n    // Handle scroll start/stop events\n    if (!scrollingRef.current) {\n      scrollingRef.current = true;\n      setIsScrolling(true);\n      if (onScrollStart) {\n        onScrollStart();\n      }\n    }\n\n    // Handle scroll frame\n    if (onScrollFrame) {\n      onScrollFrame(values);\n    }\n\n    // Reset scroll timeout\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n\n    scrollTimeoutRef.current = setTimeout(() => {\n      scrollingRef.current = false;\n      setIsScrolling(false);\n      if (onScrollStop) {\n        onScrollStop();\n      }\n    }, 100);\n  }, [onScroll, onScrollFrame, onScrollStart, onScrollStop]);\n\n  // Handle auto-hide behavior\n  const handleTrackMouseEnter = useCallback(() => {\n    setIsTrackMouseOver(true);\n    setShowTracks(true);\n  }, []);\n\n  const handleTrackMouseLeave = useCallback(() => {\n    setIsTrackMouseOver(false);\n    if (!isDragging && !isScrolling && autoHide) {\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n      hideTracksTimeoutRef.current = setTimeout(() => {\n        setShowTracks(false);\n      }, autoHideTimeout);\n    }\n  }, [autoHide, autoHideTimeout, isDragging, isScrolling]);\n\n  // Handle thumb dragging\n  const handleDragStart = useCallback(\n    (event: React.MouseEvent | MouseEvent, axis: \"x\" | \"y\") => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!viewRef.current) return;\n\n      const { clientX, clientY } = event;\n      const { scrollLeft, scrollTop } = viewRef.current;\n\n      setIsDragging(true);\n      dragStartRef.current = {\n        x: clientX,\n        y: clientY,\n        left: scrollLeft,\n        top: scrollTop,\n      };\n\n      // Add event listeners for drag\n      document.addEventListener(\"mousemove\", handleDrag);\n      document.addEventListener(\"mouseup\", handleDragEnd);\n      document.body.style.cursor = \"grabbing\";\n    },\n    []\n  );\n\n  const handleDrag = useCallback((event: MouseEvent) => {\n    if (!viewRef.current || !dragStartRef.current) return;\n\n    const { clientX, clientY } = event;\n    const { x, y, left, top } = dragStartRef.current;\n    const { clientWidth, clientHeight, scrollWidth, scrollHeight } =\n      viewRef.current;\n\n    // Calculate new scroll position\n    if (thumbHorizontalRef.current && clientWidth < scrollWidth) {\n      const deltaX = clientX - x;\n      const thumbSize = thumbHorizontalRef.current.clientWidth;\n      const trackSize = trackHorizontalRef.current?.clientWidth || 0;\n      const scrollRatio = (scrollWidth - clientWidth) / (trackSize - thumbSize);\n      const newScrollLeft = left + deltaX * scrollRatio;\n\n      viewRef.current.scrollLeft = newScrollLeft;\n    }\n\n    if (thumbVerticalRef.current && clientHeight < scrollHeight) {\n      const deltaY = clientY - y;\n      const thumbSize = thumbVerticalRef.current.clientHeight;\n      const trackSize = trackVerticalRef.current?.clientHeight || 0;\n      const scrollRatio =\n        (scrollHeight - clientHeight) / (trackSize - thumbSize);\n      const newScrollTop = top + deltaY * scrollRatio;\n\n      viewRef.current.scrollTop = newScrollTop;\n    }\n  }, []);\n\n  const handleDragEnd = useCallback(() => {\n    setIsDragging(false);\n    dragStartRef.current = null;\n\n    // Remove event listeners\n    document.removeEventListener(\"mousemove\", handleDrag);\n    document.removeEventListener(\"mouseup\", handleDragEnd);\n    document.body.style.cursor = \"\";\n\n    // Handle auto-hide\n    if (autoHide && !isTrackMouseOver && !isScrolling) {\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n      hideTracksTimeoutRef.current = setTimeout(() => {\n        setShowTracks(false);\n      }, autoHideTimeout);\n    }\n  }, [autoHide, autoHideTimeout, isScrolling, isTrackMouseOver]);\n\n  // Handle track click\n  const handleTrackClick = useCallback(\n    (event: React.MouseEvent, axis: \"x\" | \"y\") => {\n      if (!viewRef.current) return;\n\n      const { clientX, clientY } = event;\n      const {\n        scrollLeft,\n        scrollTop,\n        clientWidth,\n        clientHeight,\n        scrollWidth,\n        scrollHeight,\n      } = viewRef.current;\n\n      if (\n        axis === \"x\" &&\n        trackHorizontalRef.current &&\n        thumbHorizontalRef.current\n      ) {\n        const { left } = trackHorizontalRef.current.getBoundingClientRect();\n        const thumbSize = thumbHorizontalRef.current.clientWidth;\n        const clickPosition = clientX - left;\n        const trackSize = trackHorizontalRef.current.clientWidth;\n        const scrollRatio =\n          (scrollWidth - clientWidth) / (trackSize - thumbSize);\n        const thumbPosition = getThumbPosition({\n          thumbSize,\n          trackSize,\n          contentSize: scrollWidth,\n          scrollPosition: scrollLeft,\n        });\n\n        // Calculate new scroll position\n        const newScrollLeft = (clickPosition - thumbSize / 2) * scrollRatio;\n        viewRef.current.scrollLeft = newScrollLeft;\n      }\n\n      if (\n        axis === \"y\" &&\n        trackVerticalRef.current &&\n        thumbVerticalRef.current\n      ) {\n        const { top } = trackVerticalRef.current.getBoundingClientRect();\n        const thumbSize = thumbVerticalRef.current.clientHeight;\n        const clickPosition = clientY - top;\n        const trackSize = trackVerticalRef.current.clientHeight;\n        const scrollRatio =\n          (scrollHeight - clientHeight) / (trackSize - thumbSize);\n        const thumbPosition = getThumbPosition({\n          thumbSize,\n          trackSize,\n          contentSize: scrollHeight,\n          scrollPosition: scrollTop,\n        });\n\n        // Calculate new scroll position\n        const newScrollTop = (clickPosition - thumbSize / 2) * scrollRatio;\n        viewRef.current.scrollTop = newScrollTop;\n      }\n    },\n    []\n  );\n\n  // Handle keyboard navigation\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!viewRef.current || !a11yEnabled) return;\n\n      const {\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = viewRef.current;\n      const scrollStep = keyboardScrollAmount || 40;\n\n      switch (event.key) {\n        case \"ArrowUp\":\n          event.preventDefault();\n          viewRef.current.scrollTop = Math.max(0, scrollTop - scrollStep);\n          break;\n        case \"ArrowDown\":\n          event.preventDefault();\n          viewRef.current.scrollTop = Math.min(\n            scrollHeight - clientHeight,\n            scrollTop + scrollStep\n          );\n          break;\n        case \"ArrowLeft\":\n          event.preventDefault();\n          viewRef.current.scrollLeft = Math.max(0, scrollLeft - scrollStep);\n          break;\n        case \"ArrowRight\":\n          event.preventDefault();\n          viewRef.current.scrollLeft = Math.min(\n            scrollWidth - clientWidth,\n            scrollLeft + scrollStep\n          );\n          break;\n        case \"Home\":\n          event.preventDefault();\n          viewRef.current.scrollTop = 0;\n          break;\n        case \"End\":\n          event.preventDefault();\n          viewRef.current.scrollTop = scrollHeight - clientHeight;\n          break;\n        case \"PageUp\":\n          event.preventDefault();\n          viewRef.current.scrollTop = Math.max(0, scrollTop - clientHeight);\n          break;\n        case \"PageDown\":\n          event.preventDefault();\n          viewRef.current.scrollTop = Math.min(\n            scrollHeight - clientHeight,\n            scrollTop + clientHeight\n          );\n          break;\n        default:\n          return;\n      }\n    },\n    [a11yEnabled, keyboardScrollAmount]\n  );\n\n  // Initialize and cleanup\n  useEffect(() => {\n    // Initial update\n    handleUpdate();\n\n    // Add resize observer\n    const resizeObserver = new ResizeObserver(() => {\n      handleUpdate();\n    });\n\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    if (viewRef.current) {\n      resizeObserver.observe(viewRef.current);\n    }\n\n    // Add keyboard navigation if a11y is enabled\n    if (a11yEnabled && containerRef.current) {\n      containerRef.current.tabIndex = 0;\n    }\n\n    // Cleanup\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n\n      resizeObserver.disconnect();\n\n      document.removeEventListener(\"mousemove\", handleDrag);\n      document.removeEventListener(\"mouseup\", handleDragEnd);\n    };\n  }, [handleDrag, handleDragEnd, handleUpdate]);\n\n  // Calculate styles\n  const containerStyles: React.CSSProperties = {\n    ...containerStyle,\n    ...(autoHeight && {\n      height: \"auto\",\n      minHeight:\n        typeof autoHeightMin === \"number\"\n          ? `${autoHeightMin}px`\n          : autoHeightMin,\n      maxHeight:\n        typeof autoHeightMax === \"number\"\n          ? `${autoHeightMax}px`\n          : autoHeightMax,\n    }),\n    ...style,\n  };\n\n  const thumbHorizontalWidth =\n    hasHorizontalTrack && thumbHorizontalRef.current\n      ? getThumbSize({\n          thumbMinSize: thumbMinSize || 0,\n          trackSize: scrollValues.clientWidth,\n          contentSize: scrollValues.scrollWidth,\n        })\n      : 0;\n\n  const thumbHorizontalX =\n    hasHorizontalTrack && thumbHorizontalWidth\n      ? getThumbPosition({\n          thumbSize: thumbHorizontalWidth,\n          trackSize: scrollValues.clientWidth,\n          contentSize: scrollValues.scrollWidth,\n          scrollPosition: scrollValues.scrollLeft,\n        })\n      : 0;\n\n  const thumbVerticalHeight =\n    hasVerticalTrack && thumbVerticalRef.current\n      ? getThumbSize({\n          thumbMinSize: thumbMinSize || 0,\n          trackSize: scrollValues.clientHeight,\n          contentSize: scrollValues.scrollHeight,\n        })\n      : 0;\n\n  const thumbVerticalY =\n    hasVerticalTrack && thumbVerticalHeight\n      ? getThumbPosition({\n          thumbSize: thumbVerticalHeight,\n          trackSize: scrollValues.clientHeight,\n          contentSize: scrollValues.scrollHeight,\n          scrollPosition: scrollValues.scrollTop,\n        })\n      : 0;\n\n  // Render custom components or default ones\n  const customViewStyle = renderView ? {} : viewStyle;\n  const customTrackHorizontalStyle = renderTrackHorizontal\n    ? {}\n    : trackHorizontalStyle;\n  const customTrackVerticalStyle = renderTrackVertical\n    ? {}\n    : trackVerticalStyle;\n  const customThumbHorizontalStyle = renderThumbHorizontal\n    ? {}\n    : thumbHorizontalStyle;\n  const customThumbVerticalStyle = renderThumbVertical\n    ? {}\n    : thumbVerticalStyle;\n\n  // Prepare track visibility styles\n  const trackAutoHeightStyle = autoHeight\n    ? { opacity: 1 }\n    : {\n        opacity: showTracks ? 1 : 0,\n        transition: `opacity ${autoHideDuration}ms`,\n      };\n\n  const trackHorizontalVisibilityStyle = showHorizontalTrack\n    ? { display: \"block\" }\n    : { display: \"none\" };\n  const trackVerticalVisibilityStyle = showVerticalTrack\n    ? { display: \"block\" }\n    : { display: \"none\" };\n\n  // Render the component\n  return (\n    <div\n      ref={containerRef}\n      className={`react-custom-scrollbar ${className || \"\"}`}\n      style={containerStyles}\n      onKeyDown={handleKeyDown}\n      tabIndex={a11yEnabled ? 0 : -1}\n      role={a11yEnabled ? \"region\" : undefined}\n      aria-label={a11yEnabled ? ariaLabel : undefined}\n    >\n      {/* Scrollable view */}\n      {renderView ? (\n        React.createElement(renderView, {\n          ref: viewRef,\n          style: customViewStyle,\n          onScroll: handleScroll,\n          children,\n        })\n      ) : (\n        <div\n          ref={viewRef}\n          style={customViewStyle}\n          onScroll={handleScroll}\n          id=\"scrollable-content\"\n        >\n          {children}\n        </div>\n      )}\n\n      {/* Horizontal track */}\n      {renderTrackHorizontal ? (\n        React.createElement(renderTrackHorizontal, {\n          ref: trackHorizontalRef,\n          style: {\n            ...customTrackHorizontalStyle,\n            ...trackAutoHeightStyle,\n            ...trackHorizontalVisibilityStyle,\n          },\n          onMouseEnter: handleTrackMouseEnter,\n          onMouseLeave: handleTrackMouseLeave,\n          onClick: (e: React.MouseEvent) => handleTrackClick(e, \"x\"),\n        })\n      ) : (\n        <div\n          ref={trackHorizontalRef}\n          style={{\n            ...customTrackHorizontalStyle,\n            ...trackAutoHeightStyle,\n            ...trackHorizontalVisibilityStyle,\n          }}\n          onMouseEnter={handleTrackMouseEnter}\n          onMouseLeave={handleTrackMouseLeave}\n          onClick={(e) => handleTrackClick(e, \"x\")}\n          role={a11yEnabled ? \"scrollbar\" : undefined}\n          aria-orientation={a11yEnabled ? \"horizontal\" : undefined}\n          aria-controls=\"scrollable-content\"\n          aria-valuemin={0}\n          aria-valuemax={100}\n          aria-valuenow={Math.round(scrollValues.left * 100)}\n        >\n          {/* Horizontal thumb */}\n          {renderThumbHorizontal ? (\n            React.createElement(renderThumbHorizontal, {\n              ref: thumbHorizontalRef,\n              style: {\n                ...customThumbHorizontalStyle,\n                width: `${thumbHorizontalWidth}px`,\n                transform: `translateX(${thumbHorizontalX}px)`,\n              },\n              onMouseDown: (e: React.MouseEvent) => handleDragStart(e, \"x\"),\n            })\n          ) : (\n            <div\n              ref={thumbHorizontalRef}\n              style={{\n                ...customThumbHorizontalStyle,\n                width: `${thumbHorizontalWidth}px`,\n                transform: `translateX(${thumbHorizontalX}px)`,\n              }}\n              onMouseDown={(e) => handleDragStart(e, \"x\")}\n            />\n          )}\n        </div>\n      )}\n\n      {/* Vertical track */}\n      {renderTrackVertical ? (\n        React.createElement(renderTrackVertical, {\n          ref: trackVerticalRef,\n          style: {\n            ...customTrackVerticalStyle,\n            ...trackAutoHeightStyle,\n            ...trackVerticalVisibilityStyle,\n          },\n          onMouseEnter: handleTrackMouseEnter,\n          onMouseLeave: handleTrackMouseLeave,\n          onClick: (e: React.MouseEvent) => handleTrackClick(e, \"y\"),\n        })\n      ) : (\n        <div\n          ref={trackVerticalRef}\n          style={{\n            ...customTrackVerticalStyle,\n            ...trackAutoHeightStyle,\n            ...trackVerticalVisibilityStyle,\n          }}\n          onMouseEnter={handleTrackMouseEnter}\n          onMouseLeave={handleTrackMouseLeave}\n          onClick={(e) => handleTrackClick(e, \"y\")}\n          role={a11yEnabled ? \"scrollbar\" : undefined}\n          aria-orientation={a11yEnabled ? \"vertical\" : undefined}\n          aria-controls=\"scrollable-content\"\n          aria-valuemin={0}\n          aria-valuemax={100}\n          aria-valuenow={Math.round(scrollValues.top * 100)}\n        >\n          {/* Vertical thumb */}\n          {renderThumbVertical ? (\n            React.createElement(renderThumbVertical, {\n              ref: thumbVerticalRef,\n              style: {\n                ...customThumbVerticalStyle,\n                height: `${thumbVerticalHeight}px`,\n                transform: `translateY(${thumbVerticalY}px)`,\n              },\n              onMouseDown: (e: React.MouseEvent) => handleDragStart(e, \"y\"),\n            })\n          ) : (\n            <div\n              ref={thumbVerticalRef}\n              style={{\n                ...customThumbVerticalStyle,\n                height: `${thumbVerticalHeight}px`,\n                transform: `translateY(${thumbVerticalY}px)`,\n              }}\n              onMouseDown={(e) => handleDragStart(e, \"y\")}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scrollbar;\n","/**\r\n * Browser compatibility polyfills for react-custom-scrollbar\r\n * Import this file to enable support for older browsers\r\n */\r\n\r\n// ResizeObserver polyfill\r\nexport function setupResizeObserverPolyfill() {\r\n  if (typeof window !== \"undefined\" && !window.ResizeObserver) {\r\n    // This is a dynamic import to avoid bundling the polyfill by default\r\n    // You need to install resize-observer-polyfill package\r\n    import(\"resize-observer-polyfill\")\r\n      .then((module) => {\r\n        window.ResizeObserver = module.default;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to load ResizeObserver polyfill:\", err);\r\n      });\r\n  }\r\n}\r\n\r\n// Passive event listeners detection\r\nexport const supportsPassiveEvents = () => {\r\n  let passiveSupported = false;\r\n\r\n  try {\r\n    const options = {\r\n      get passive() {\r\n        passiveSupported = true;\r\n        return true;\r\n      },\r\n    };\r\n\r\n    // Test if passive events are supported\r\n    window.addEventListener(\"test\", () => {}, options as EventListenerOptions);\r\n    window.removeEventListener(\r\n      \"test\",\r\n      () => {},\r\n      options as EventListenerOptions\r\n    );\r\n  } catch (err) {\r\n    passiveSupported = false;\r\n  }\r\n\r\n  return passiveSupported;\r\n};\r\n\r\n/**\r\n * Setup all polyfills needed for react-custom-scrollbar\r\n */\r\nexport function setupPolyfills() {\r\n  setupResizeObserverPolyfill();\r\n}\r\n\r\nexport default setupPolyfills;\r\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"names":["getScrollValues","element","scrollLeft","scrollTop","scrollWidth","scrollHeight","clientWidth","clientHeight","left","top","getThumbSize","_a","thumbMinSize","trackSize","ratio","contentSize","Math","max","getThumbPosition","thumbSize","scrollPosition","maxScrollPosition","containerStyle","position","overflow","width","height","viewStyle","right","bottom","WebkitOverflowScrolling","trackHorizontalStyle","borderRadius","trackVerticalStyle","thumbHorizontalStyle","cursor","backgroundColor","thumbVerticalStyle","defaultProps","autoHide","autoHideTimeout","autoHideDuration","autoHeight","autoHeightMin","autoHeightMax","universal","hideTracksWhenNotNeeded","a11yEnabled","ariaLabel","keyboardScrollAmount","setupResizeObserverPolyfill","window","ResizeObserver","Promise","resolve","then","ResizeObserver_es","module","default","catch","err","console","error","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","call","isBrowser","document","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","getHTMLElementContentRect","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","method","apply","onScrollStart","onScrollStop","onScroll","onScrollFrame","onUpdate","renderView","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","className","style","children","useState","scrollValues","setScrollValues","_c","isDragging","setIsDragging","_d","isScrolling","setIsScrolling","_e","isTrackMouseOver","setIsTrackMouseOver","_f","showTracks","setShowTracks","containerRef","useRef","viewRef","trackHorizontalRef","trackVerticalRef","thumbHorizontalRef","thumbVerticalRef","scrollingRef","scrollTimeoutRef","hideTracksTimeoutRef","dragStartRef","hasHorizontalTrack","hasVerticalTrack","showHorizontalTrack","showVerticalTrack","handleUpdate","useCallback","current","values","handleScroll","clearTimeout","handleTrackMouseEnter","handleTrackMouseLeave","handleDragStart","event","axis","preventDefault","stopPropagation","clientX","clientY","handleDrag","handleDragEnd","body","deltaX","newScrollLeft","deltaY","newScrollTop","handleTrackClick","getBoundingClientRect","clickPosition","scrollRatio","top_1","handleKeyDown","scrollStep","min","useEffect","resizeObserver","tabIndex","containerStyles","__assign","minHeight","concat","maxHeight","thumbHorizontalWidth","thumbHorizontalX","thumbVerticalHeight","thumbVerticalY","customViewStyle","customTrackHorizontalStyle","customTrackVerticalStyle","customThumbHorizontalStyle","customThumbVerticalStyle","trackAutoHeightStyle","opacity","transition","trackHorizontalVisibilityStyle","display","trackVerticalVisibilityStyle","React","createElement","ref","onKeyDown","role","undefined","id","onMouseEnter","onMouseLeave","onClick","e","transform","onMouseDown","passiveSupported","options","passive"],"mappings":"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"}