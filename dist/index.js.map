{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/components/Scrollbar.tsx"],"sourcesContent":["/**\n * Get scroll values for an element\n */\nexport function getScrollValues(element: HTMLElement) {\n  const {\n    scrollLeft,\n    scrollTop,\n    scrollWidth,\n    scrollHeight,\n    clientWidth,\n    clientHeight\n  } = element;\n\n  return {\n    left: scrollLeft / (scrollWidth - clientWidth) || 0,\n    top: scrollTop / (scrollHeight - clientHeight) || 0,\n    scrollLeft,\n    scrollTop,\n    scrollWidth,\n    scrollHeight,\n    clientWidth,\n    clientHeight\n  };\n}\n\n/**\n * Check if element is a DOM element\n */\nexport function isDOMElement(element: any): element is HTMLElement {\n  return element && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object';\n}\n\n/**\n * Return false if passive events aren't supported, otherwise return an object with passive: true\n */\nexport const getPassiveOptions = () => {\n  let passiveSupported = false;\n\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return true;\n      }\n    };\n\n    // Use type assertion to handle the options object\n    window.addEventListener('test', () => {}, options as AddEventListenerOptions);\n    window.removeEventListener('test', () => {}, options as AddEventListenerOptions);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported ? { passive: true } : false;\n};\n\n/**\n * Calculate thumb size\n */\nexport function getThumbSize({ thumbMinSize, trackSize, contentSize }: { thumbMinSize: number; trackSize: number; contentSize: number }) {\n  const ratio = trackSize / contentSize;\n  const thumbSize = Math.max(ratio * trackSize, thumbMinSize);\n  return thumbSize;\n}\n\n/**\n * Calculate thumb position\n */\nexport function getThumbPosition({ thumbSize, trackSize, contentSize, scrollPosition }: \n  { thumbSize: number; trackSize: number; contentSize: number; scrollPosition: number }) {\n  const maxScrollPosition = contentSize - trackSize;\n  const maxThumbPosition = trackSize - thumbSize;\n  const ratio = maxThumbPosition / maxScrollPosition;\n  return scrollPosition * ratio;\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ScrollbarProps, ScrollValues } from '../types';\nimport { getScrollValues, isDOMElement, getPassiveOptions, getThumbSize, getThumbPosition } from '../utils';\n\n// Default component styles\nconst containerStyle: React.CSSProperties = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n  height: '100%'\n};\n\nconst viewStyle: React.CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'scroll',\n  WebkitOverflowScrolling: 'touch'\n};\n\nconst trackHorizontalStyle: React.CSSProperties = {\n  position: 'absolute',\n  height: 6,\n  right: 2,\n  bottom: 2,\n  left: 2,\n  borderRadius: 3\n};\n\nconst trackVerticalStyle: React.CSSProperties = {\n  position: 'absolute',\n  width: 6,\n  right: 2,\n  bottom: 2,\n  top: 2,\n  borderRadius: 3\n};\n\nconst thumbHorizontalStyle: React.CSSProperties = {\n  position: 'absolute',\n  height: '100%',\n  cursor: 'pointer',\n  borderRadius: 'inherit',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)'\n};\n\nconst thumbVerticalStyle: React.CSSProperties = {\n  position: 'absolute',\n  width: '100%',\n  cursor: 'pointer',\n  borderRadius: 'inherit',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)'\n};\n\n// Default props\nconst defaultProps: Partial<ScrollbarProps> = {\n  autoHide: false,\n  autoHideTimeout: 1000,\n  autoHideDuration: 200,\n  autoHeight: false,\n  autoHeightMin: 0,\n  autoHeightMax: 200,\n  thumbMinSize: 30,\n  universal: false,\n  hideTracksWhenNotNeeded: false\n};\n\nconst Scrollbar: React.FC<ScrollbarProps> = (props) => {\n  // Merge default props with provided props\n  const {\n    onScrollStart,\n    onScrollStop,\n    onScroll,\n    onScrollFrame,\n    onUpdate,\n    renderView,\n    renderTrackHorizontal,\n    renderTrackVertical,\n    renderThumbHorizontal,\n    renderThumbVertical,\n    autoHide,\n    autoHideTimeout,\n    autoHideDuration,\n    autoHeight,\n    autoHeightMin,\n    autoHeightMax,\n    thumbMinSize,\n    universal,\n    className,\n    style,\n    hideTracksWhenNotNeeded,\n    children\n  } = { ...defaultProps, ...props };\n\n  // Component state\n  const [scrollValues, setScrollValues] = useState<ScrollValues>({\n    left: 0,\n    top: 0,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollWidth: 0,\n    scrollHeight: 0,\n    clientWidth: 0,\n    clientHeight: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const [isTrackMouseOver, setIsTrackMouseOver] = useState(false);\n  const [showTracks, setShowTracks] = useState(!autoHide);\n\n  // Refs\n  const containerRef = useRef<HTMLDivElement>(null);\n  const viewRef = useRef<HTMLDivElement>(null);\n  const trackHorizontalRef = useRef<HTMLDivElement>(null);\n  const trackVerticalRef = useRef<HTMLDivElement>(null);\n  const thumbHorizontalRef = useRef<HTMLDivElement>(null);\n  const thumbVerticalRef = useRef<HTMLDivElement>(null);\n  const scrollingRef = useRef<boolean>(false);\n  const scrollTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTracksTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const dragStartRef = useRef<{ x: number; y: number; left: number; top: number } | null>(null);\n\n  // Calculate if tracks should be visible\n  const hasHorizontalTrack = scrollValues.scrollWidth > scrollValues.clientWidth;\n  const hasVerticalTrack = scrollValues.scrollHeight > scrollValues.clientHeight;\n  const showHorizontalTrack = !hideTracksWhenNotNeeded || hasHorizontalTrack;\n  const showVerticalTrack = !hideTracksWhenNotNeeded || hasVerticalTrack;\n\n  // Update scroll values\n  const handleUpdate = useCallback(() => {\n    if (!viewRef.current) return;\n\n    const values = getScrollValues(viewRef.current);\n    setScrollValues(values);\n\n    if (onUpdate) {\n      onUpdate(values);\n    }\n  }, [onUpdate]);\n\n  // Handle scroll events\n  const handleScroll = useCallback(() => {\n    if (!viewRef.current) return;\n\n    const values = getScrollValues(viewRef.current);\n    setScrollValues(values);\n\n    if (onScroll) {\n      onScroll(values);\n    }\n\n    // Handle scroll start/stop events\n    if (!scrollingRef.current) {\n      scrollingRef.current = true;\n      setIsScrolling(true);\n      if (onScrollStart) {\n        onScrollStart();\n      }\n    }\n\n    // Handle scroll frame\n    if (onScrollFrame) {\n      onScrollFrame(values);\n    }\n\n    // Reset scroll timeout\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n\n    scrollTimeoutRef.current = setTimeout(() => {\n      scrollingRef.current = false;\n      setIsScrolling(false);\n      if (onScrollStop) {\n        onScrollStop();\n      }\n    }, 100);\n  }, [onScroll, onScrollFrame, onScrollStart, onScrollStop]);\n\n  // Handle auto-hide behavior\n  const handleTrackMouseEnter = useCallback(() => {\n    setIsTrackMouseOver(true);\n    setShowTracks(true);\n  }, []);\n\n  const handleTrackMouseLeave = useCallback(() => {\n    setIsTrackMouseOver(false);\n    if (!isDragging && !isScrolling && autoHide) {\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n      hideTracksTimeoutRef.current = setTimeout(() => {\n        setShowTracks(false);\n      }, autoHideTimeout);\n    }\n  }, [autoHide, autoHideTimeout, isDragging, isScrolling]);\n\n  // Handle thumb dragging\n  const handleDragStart = useCallback((event: React.MouseEvent | MouseEvent, axis: 'x' | 'y') => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!viewRef.current) return;\n\n    const { clientX, clientY } = event;\n    const { scrollLeft, scrollTop } = viewRef.current;\n\n    setIsDragging(true);\n    dragStartRef.current = {\n      x: clientX,\n      y: clientY,\n      left: scrollLeft,\n      top: scrollTop\n    };\n\n    // Add event listeners for drag\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('mouseup', handleDragEnd);\n    document.body.style.cursor = 'grabbing';\n  }, []);\n\n  const handleDrag = useCallback((event: MouseEvent) => {\n    if (!viewRef.current || !dragStartRef.current) return;\n\n    const { clientX, clientY } = event;\n    const { x, y, left, top } = dragStartRef.current;\n    const { clientWidth, clientHeight, scrollWidth, scrollHeight } = viewRef.current;\n\n    // Calculate new scroll position\n    if (thumbHorizontalRef.current && clientWidth < scrollWidth) {\n      const deltaX = clientX - x;\n      const thumbSize = thumbHorizontalRef.current.clientWidth;\n      const trackSize = trackHorizontalRef.current?.clientWidth || 0;\n      const scrollRatio = (scrollWidth - clientWidth) / (trackSize - thumbSize);\n      const newScrollLeft = left + deltaX * scrollRatio;\n\n      viewRef.current.scrollLeft = newScrollLeft;\n    }\n\n    if (thumbVerticalRef.current && clientHeight < scrollHeight) {\n      const deltaY = clientY - y;\n      const thumbSize = thumbVerticalRef.current.clientHeight;\n      const trackSize = trackVerticalRef.current?.clientHeight || 0;\n      const scrollRatio = (scrollHeight - clientHeight) / (trackSize - thumbSize);\n      const newScrollTop = top + deltaY * scrollRatio;\n\n      viewRef.current.scrollTop = newScrollTop;\n    }\n  }, []);\n\n  const handleDragEnd = useCallback(() => {\n    setIsDragging(false);\n    dragStartRef.current = null;\n\n    // Remove event listeners\n    document.removeEventListener('mousemove', handleDrag);\n    document.removeEventListener('mouseup', handleDragEnd);\n    document.body.style.cursor = '';\n\n    // Handle auto-hide\n    if (autoHide && !isTrackMouseOver && !isScrolling) {\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n      hideTracksTimeoutRef.current = setTimeout(() => {\n        setShowTracks(false);\n      }, autoHideTimeout);\n    }\n  }, [autoHide, autoHideTimeout, isScrolling, isTrackMouseOver]);\n\n  // Handle track click\n  const handleTrackClick = useCallback((event: React.MouseEvent, axis: 'x' | 'y') => {\n    if (!viewRef.current) return;\n\n    const { clientX, clientY } = event;\n    const { scrollLeft, scrollTop, clientWidth, clientHeight, scrollWidth, scrollHeight } = viewRef.current;\n\n    if (axis === 'x' && trackHorizontalRef.current && thumbHorizontalRef.current) {\n      const { left } = trackHorizontalRef.current.getBoundingClientRect();\n      const thumbSize = thumbHorizontalRef.current.clientWidth;\n      const clickPosition = clientX - left;\n      const trackSize = trackHorizontalRef.current.clientWidth;\n      const scrollRatio = (scrollWidth - clientWidth) / (trackSize - thumbSize);\n      const thumbPosition = getThumbPosition({\n        thumbSize,\n        trackSize,\n        contentSize: scrollWidth,\n        scrollPosition: scrollLeft\n      });\n\n      // Calculate new scroll position\n      const newScrollLeft = ((clickPosition - thumbSize / 2) * scrollRatio);\n      viewRef.current.scrollLeft = newScrollLeft;\n    }\n\n    if (axis === 'y' && trackVerticalRef.current && thumbVerticalRef.current) {\n      const { top } = trackVerticalRef.current.getBoundingClientRect();\n      const thumbSize = thumbVerticalRef.current.clientHeight;\n      const clickPosition = clientY - top;\n      const trackSize = trackVerticalRef.current.clientHeight;\n      const scrollRatio = (scrollHeight - clientHeight) / (trackSize - thumbSize);\n      const thumbPosition = getThumbPosition({\n        thumbSize,\n        trackSize,\n        contentSize: scrollHeight,\n        scrollPosition: scrollTop\n      });\n\n      // Calculate new scroll position\n      const newScrollTop = ((clickPosition - thumbSize / 2) * scrollRatio);\n      viewRef.current.scrollTop = newScrollTop;\n    }\n  }, []);\n\n  // Initialize and cleanup\n  useEffect(() => {\n    // Initial update\n    handleUpdate();\n\n    // Add resize observer\n    const resizeObserver = new ResizeObserver(() => {\n      handleUpdate();\n    });\n\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    if (viewRef.current) {\n      resizeObserver.observe(viewRef.current);\n    }\n\n    // Cleanup\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n\n      if (hideTracksTimeoutRef.current) {\n        clearTimeout(hideTracksTimeoutRef.current);\n      }\n\n      resizeObserver.disconnect();\n\n      document.removeEventListener('mousemove', handleDrag);\n      document.removeEventListener('mouseup', handleDragEnd);\n    };\n  }, [handleDrag, handleDragEnd, handleUpdate]);\n\n  // Calculate styles\n  const containerStyles: React.CSSProperties = {\n    ...containerStyle,\n    ...(autoHeight && {\n      height: 'auto',\n      minHeight: typeof autoHeightMin === 'number' ? `${autoHeightMin}px` : autoHeightMin,\n      maxHeight: typeof autoHeightMax === 'number' ? `${autoHeightMax}px` : autoHeightMax\n    }),\n    ...style\n  };\n\n  const thumbHorizontalWidth = hasHorizontalTrack && thumbHorizontalRef.current\n    ? getThumbSize({\n        thumbMinSize: thumbMinSize || 0,\n        trackSize: scrollValues.clientWidth,\n        contentSize: scrollValues.scrollWidth\n      })\n    : 0;\n\n  const thumbHorizontalX = hasHorizontalTrack && thumbHorizontalWidth\n    ? getThumbPosition({\n        thumbSize: thumbHorizontalWidth,\n        trackSize: scrollValues.clientWidth,\n        contentSize: scrollValues.scrollWidth,\n        scrollPosition: scrollValues.scrollLeft\n      })\n    : 0;\n\n  const thumbVerticalHeight = hasVerticalTrack && thumbVerticalRef.current\n    ? getThumbSize({\n        thumbMinSize: thumbMinSize || 0,\n        trackSize: scrollValues.clientHeight,\n        contentSize: scrollValues.scrollHeight\n      })\n    : 0;\n\n  const thumbVerticalY = hasVerticalTrack && thumbVerticalHeight\n    ? getThumbPosition({\n        thumbSize: thumbVerticalHeight,\n        trackSize: scrollValues.clientHeight,\n        contentSize: scrollValues.scrollHeight,\n        scrollPosition: scrollValues.scrollTop\n      })\n    : 0;\n\n  // Render custom components or default ones\n  const customViewStyle = renderView ? {} : viewStyle;\n  const customTrackHorizontalStyle = renderTrackHorizontal ? {} : trackHorizontalStyle;\n  const customTrackVerticalStyle = renderTrackVertical ? {} : trackVerticalStyle;\n  const customThumbHorizontalStyle = renderThumbHorizontal ? {} : thumbHorizontalStyle;\n  const customThumbVerticalStyle = renderThumbVertical ? {} : thumbVerticalStyle;\n\n  // Prepare track visibility styles\n  const trackAutoHeightStyle = autoHeight\n    ? { opacity: 1 }\n    : { opacity: showTracks ? 1 : 0, transition: `opacity ${autoHideDuration}ms` };\n\n  const trackHorizontalVisibilityStyle = showHorizontalTrack ? { display: 'block' } : { display: 'none' };\n  const trackVerticalVisibilityStyle = showVerticalTrack ? { display: 'block' } : { display: 'none' };\n\n  // Render the component\n  return (\n    <div\n      ref={containerRef}\n      className={`react-custom-scrollbar ${className || ''}`}\n      style={containerStyles}\n    >\n      {/* Scrollable view */}\n      {renderView ? (\n        React.createElement(renderView, {\n          ref: viewRef,\n          style: customViewStyle,\n          onScroll: handleScroll,\n          children\n        })\n      ) : (\n        <div\n          ref={viewRef}\n          style={customViewStyle}\n          onScroll={handleScroll}\n        >\n          {children}\n        </div>\n      )}\n\n      {/* Horizontal track */}\n      {renderTrackHorizontal ? (\n        React.createElement(renderTrackHorizontal, {\n          ref: trackHorizontalRef,\n          style: {\n            ...customTrackHorizontalStyle,\n            ...trackAutoHeightStyle,\n            ...trackHorizontalVisibilityStyle\n          },\n          onMouseEnter: handleTrackMouseEnter,\n          onMouseLeave: handleTrackMouseLeave,\n          onClick: (e: React.MouseEvent) => handleTrackClick(e, 'x')\n        })\n      ) : (\n        <div\n          ref={trackHorizontalRef}\n          style={{\n            ...customTrackHorizontalStyle,\n            ...trackAutoHeightStyle,\n            ...trackHorizontalVisibilityStyle\n          }}\n          onMouseEnter={handleTrackMouseEnter}\n          onMouseLeave={handleTrackMouseLeave}\n          onClick={(e) => handleTrackClick(e, 'x')}\n        >\n          {/* Horizontal thumb */}\n          {renderThumbHorizontal ? (\n            React.createElement(renderThumbHorizontal, {\n              ref: thumbHorizontalRef,\n              style: {\n                ...customThumbHorizontalStyle,\n                width: `${thumbHorizontalWidth}px`,\n                transform: `translateX(${thumbHorizontalX}px)`\n              },\n              onMouseDown: (e: React.MouseEvent) => handleDragStart(e, 'x')\n            })\n          ) : (\n            <div\n              ref={thumbHorizontalRef}\n              style={{\n                ...customThumbHorizontalStyle,\n                width: `${thumbHorizontalWidth}px`,\n                transform: `translateX(${thumbHorizontalX}px)`\n              }}\n              onMouseDown={(e) => handleDragStart(e, 'x')}\n            />\n          )}\n        </div>\n      )}\n\n      {/* Vertical track */}\n      {renderTrackVertical ? (\n        React.createElement(renderTrackVertical, {\n          ref: trackVerticalRef,\n          style: {\n            ...customTrackVerticalStyle,\n            ...trackAutoHeightStyle,\n            ...trackVerticalVisibilityStyle\n          },\n          onMouseEnter: handleTrackMouseEnter,\n          onMouseLeave: handleTrackMouseLeave,\n          onClick: (e: React.MouseEvent) => handleTrackClick(e, 'y')\n        })\n      ) : (\n        <div\n          ref={trackVerticalRef}\n          style={{\n            ...customTrackVerticalStyle,\n            ...trackAutoHeightStyle,\n            ...trackVerticalVisibilityStyle\n          }}\n          onMouseEnter={handleTrackMouseEnter}\n          onMouseLeave={handleTrackMouseLeave}\n          onClick={(e) => handleTrackClick(e, 'y')}\n        >\n          {/* Vertical thumb */}\n          {renderThumbVertical ? (\n            React.createElement(renderThumbVertical, {\n              ref: thumbVerticalRef,\n              style: {\n                ...customThumbVerticalStyle,\n                height: `${thumbVerticalHeight}px`,\n                transform: `translateY(${thumbVerticalY}px)`\n              },\n              onMouseDown: (e: React.MouseEvent) => handleDragStart(e, 'y')\n            })\n          ) : (\n            <div\n              ref={thumbVerticalRef}\n              style={{\n                ...customThumbVerticalStyle,\n                height: `${thumbVerticalHeight}px`,\n                transform: `translateY(${thumbVerticalY}px)`\n              }}\n              onMouseDown={(e) => handleDragStart(e, 'y')}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scrollbar;"],"names":["getScrollValues","element","scrollLeft","scrollTop","scrollWidth","scrollHeight","clientWidth","clientHeight","left","top","getThumbSize","_a","thumbMinSize","trackSize","ratio","contentSize","Math","max","getThumbPosition","thumbSize","scrollPosition","containerStyle","position","overflow","width","height","viewStyle","right","bottom","WebkitOverflowScrolling","trackHorizontalStyle","borderRadius","trackVerticalStyle","thumbHorizontalStyle","cursor","backgroundColor","thumbVerticalStyle","defaultProps","autoHide","autoHideTimeout","autoHideDuration","autoHeight","autoHeightMin","autoHeightMax","universal","hideTracksWhenNotNeeded","props","__assign","onScrollStart","onScrollStop","onScroll","onScrollFrame","onUpdate","renderView","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","className","style","children","_b","useState","scrollValues","setScrollValues","_c","isDragging","setIsDragging","_d","isScrolling","setIsScrolling","_e","isTrackMouseOver","setIsTrackMouseOver","_f","showTracks","setShowTracks","containerRef","useRef","viewRef","trackHorizontalRef","trackVerticalRef","thumbHorizontalRef","thumbVerticalRef","scrollingRef","scrollTimeoutRef","hideTracksTimeoutRef","dragStartRef","hasHorizontalTrack","hasVerticalTrack","showHorizontalTrack","showVerticalTrack","handleUpdate","useCallback","current","values","handleScroll","clearTimeout","setTimeout","handleTrackMouseEnter","handleTrackMouseLeave","handleDragStart","event","axis","preventDefault","stopPropagation","clientX","clientY","x","y","document","addEventListener","handleDrag","handleDragEnd","body","deltaX","newScrollLeft","deltaY","newScrollTop","removeEventListener","handleTrackClick","getBoundingClientRect","clickPosition","scrollRatio","top_1","useEffect","resizeObserver","ResizeObserver","observe","disconnect","containerStyles","minHeight","concat","maxHeight","thumbHorizontalWidth","thumbHorizontalX","thumbVerticalHeight","thumbVerticalY","customViewStyle","customTrackHorizontalStyle","customTrackVerticalStyle","customThumbHorizontalStyle","customThumbVerticalStyle","trackAutoHeightStyle","opacity","transition","trackHorizontalVisibilityStyle","display","trackVerticalVisibilityStyle","React","createElement","ref","onMouseEnter","onMouseLeave","onClick","e","transform","onMouseDown"],"mappings":"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"}